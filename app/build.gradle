apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "com.bearya.robot.household"
        minSdkVersion 21
        targetSdkVersion 22
        versionCode 10003
        versionName '1.0.3'
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs'];
        }
    }

    dexOptions {
        preDexLibraries = false
        incremental true
        javaMaxHeapSize "4g"
    }

    signingConfigs {
        //证书
        cgy_keystore {
            keyAlias 'cgytest'
            keyPassword 'cgy529387306'
            storeFile file('cgytest.jks')
            storePassword 'cgy529387306'
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.cgy_keystore
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true  //去掉未使用的资源文件
            signingConfig signingConfigs.cgy_keystore
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/services/com.fasterxml.jackson.core.ObjectCodec'
        exclude 'META-INF/services/com.fasterxml.jackson.core.JsonFactory'
        exclude 'META-INF/maven/com.squareup.okhttp/okhttp/pom.properties'
        exclude 'META-INF/maven/com.fasterxml.jackson.core/jackson-core/pom.xml'
        exclude 'META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml'
        exclude 'META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.properties'
        exclude 'META-INF/maven/com.fasterxml.jackson.core/jackson-core/pom.properties'
        exclude 'META-INF/maven/com.squareup.okhttp/okhttp/pom.xml'
        exclude 'META-INF/maven/com.fasterxml.jackson.core/jackson-annotations/pom.properties'
        exclude 'META-INF/maven/com.fasterxml.jackson.core/jackson-annotations/pom.xml'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/notice'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license'
        exclude 'META-INF/license.txt'
    }
    productFlavors {
    }
}

def releaseTime() {
    return new Date().format("yyyyMMdd-HHmm", TimeZone.getTimeZone("UTC"))
}

android.applicationVariants.all { variant ->
    def buildType = variant.buildType
    if (buildType.name.equals("release")) {
        /*variant.outputs.each { output ->
            output.processManifest.doLast {
                def manifestFile = file("${buildDir}/intermediates/manifests/full/${variant.dirName}/AndroidManifest.xml")
                String content = manifestFile.getText('UTF-8')
                content = content.replaceAll('com.bearya.robot.household.dev', 'com.bearya.robot.household')
                manifestFile.write(content, 'UTF-8')
            }
        }*/

        variant.mergeResources.doLast {
            def f = file("${buildDir}/intermediates/res/merged/${variant.dirName}/values/values.xml")
            String contentValue = f.getText('UTF-8')
            contentValue = contentValue.replaceAll('>贝芽机器人dev<', '>贝芽机器人<')
            contentValue = contentValue.replaceAll('wx19275a2c915b1992', 'wx15c26c87b5c49c87')
            contentValue = contentValue.replaceAll('>dev<', '>release<')
            f.write(contentValue, 'UTF-8')
        }
    } else {
        /*variant.outputs.each { output ->
            output.processManifest.doLast {
                def manifestFile = file("${buildDir}/intermediates/manifests/full/${variant.dirName}/AndroidManifest.xml")
                String content = manifestFile.getText('UTF-8')
                //content = content.replaceAll('com.bearya.robot.household', 'com.bearya.robot.household.dev')
                manifestFile.write(content, 'UTF-8')
            }
        }*/
        variant.outputs.each {
            output -> output.outputFile = new File(output.outputFile.parent, "beiya" + "-${releaseTime()}.apk");
        }
        variant.mergeResources.doLast {
            def f = file("${buildDir}/intermediates/res/merged/${variant.dirName}/values/values.xml")
            String contentValue = f.getText('UTF-8')
            contentValue = contentValue.replaceAll('>贝芽机器人<', '>贝芽机器人dev<')
            contentValue = contentValue.replaceAll('wx15c26c87b5c49c87', 'wx19275a2c915b1992')
            contentValue = contentValue.replaceAll('>release<', '>dev<')
            f.write(contentValue, 'UTF-8')
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.30'
    compile 'com.android.support:appcompat-v7:26.+'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:recyclerview-v7:26.0.0-alpha1'
    compile 'com.github.bumptech.glide:glide:3.8.0'
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'io.reactivex:rxjava:1.3.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.8.0'
    compile 'eu.the4thfloor.volley:com.android.volley:2015.05.28'
    compile files('libs/agora-sig-sdk.jar')
    compile files('libs/agora-rtc-sdk.jar')
    compile 'com.victor:lib:1.0.4'
    compile 'com.skyfishjy.ripplebackground:library:1.0.1'
    compile('com.hwangjr.rxbus:rxbus:1.0.5') {
        exclude group: 'com.jakewharton.timber', module: 'timber'
    }
    compile 'com.alibaba:fastjson:1.1.56.android'
    compile 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:1.4.0'
    compile 'pub.devrel:easypermissions:0.4.2'
    compile 'com.google.zxing:core:3.2.1'
    compile 'cn.bingoogolapple:bga-qrcodecore:1.1.7@aar'
    compile 'cn.bingoogolapple:bga-zxing:1.1.7@aar'
    compile 'com.wilddog.client:wilddog-sync-android:2.3.7'
    compile 'com.zhy:okhttputils:2.6.2'
    compile 'com.tencent.bugly:crashreport:latest.release'
    //其中latest.release指代最新Bugly SDK版本号
    compile 'com.tencent.bugly:nativecrashreport:latest.release'
    compile 'com.github.codbking:PickTime:v1.0.1'
    compile 'com.github.GrenderG:Toasty:1.3.0'
}

